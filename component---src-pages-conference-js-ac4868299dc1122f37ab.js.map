{"version":3,"sources":["webpack://library-dash/./src/pages/conference.js"],"names":["Side","children","Grid","item","md","sm","xs","Main","csvData","useStaticQuery","jsonData","loansByItemType","loansBySite","selectAndCollectUsers","figures","writeConferenceFigures","titles","map","o","layout","title","text","container","siteTitle","subTitle"],"mappings":"+j0CAYMA,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAkB,gBAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,IAAI,EAAOC,IAAI,GAAQL,IAClEM,EAAO,SAAC,GAAD,IAAGN,EAAH,EAAGA,SAAH,OAAkB,gBAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAAKL,IAiDnE,MA/CA,WACE,IAAMO,GAAUC,QAAe,aA4BzBC,EAAW,CACf,qBAAsBC,EACtB,gBAAiBC,EACjB,kCAAmCC,GAE/BC,GAAUC,OAAuBP,EAASE,GAC1CM,EAASF,EAAQG,KAAI,SAAAC,GAAC,MAAgC,iBAApBA,EAAEC,OAAOC,MAAsBF,EAAEC,OAAOC,MAAQF,EAAEC,OAAOC,MAAMC,QACvG,OACE,gBAACnB,EAAA,EAAD,CAAMoB,WAAS,GACb,gBAACtB,EAAD,KAAM,gBAAC,IAAD,CAASgB,OAAQA,KACvB,gBAACT,EAAD,KACE,gBAAC,IAAD,CAAQgB,UAAU,mBAAmBC,SAAS,YAC9C,gBAAC,IAAD,CAAgBV,QAASA","file":"component---src-pages-conference-js-ac4868299dc1122f37ab.js","sourcesContent":["import React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport Header from \"../components/header\"\nimport SideNav from '../components/sideNav'\nimport Grid from '@material-ui/core/Grid';\nimport ContentWrapper from '../components/contentWrapper'\nimport { writeConferenceFigures } from '../helper/writeFigures'\nimport loansByItemType from '../data/monthly_loans_by_item_type.json'\nimport loansBySite from '../data/monthly_loans_by_site.json'\nimport selectAndCollectUsers from '../data/weekly_select_and_collect_users.json'\nimport makeID from '../helper/makeId';\n\nconst Side = ({ children }) => <Grid item md={2} sm={false} xs={false}>{children}</Grid>\nconst Main = ({ children }) => <Grid item md={10} sm={12} xs={12}>{children}</Grid>\n\nfunction ConferencePage() {\n  const csvData = useStaticQuery(graphql`\n  {\n    allSocialMediaCsv {\n      nodes {\n        Week_commencing\n        Facebook_Engagements\n        Twitter_Engagements\n      }\n    }\n    allYtVideosCsv {\n      nodes {\n        date\n        publishedAt\n        title\n        viewCount\n        age\n      }\n    }\n    allFbVidsCsv {\n      nodes {\n        title\n        views\n        description\n        created_time\n      }\n    }\n  }\n  `)\n  const jsonData = {\n    'Loans by item type': loansByItemType,\n    'Loans by site': loansBySite,\n    'Select and collect weekly users': selectAndCollectUsers\n  }\n  const figures = writeConferenceFigures(csvData, jsonData)\n  const titles = figures.map(o => typeof (o.layout.title) === 'string' ? o.layout.title : o.layout.title.text)\n  return (\n    <Grid container>\n      <Side><SideNav titles={titles} /></Side>\n      <Main>\n        <Header siteTitle='Barnet Libraries' subTitle='2020-21' />\n        <ContentWrapper figures={figures} />\n      </Main>\n    </Grid>\n  )\n}\n\nexport default ConferencePage\n"],"sourceRoot":""}